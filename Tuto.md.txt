# **TUTORIEL POUR KUBERNETES**

## **1. INSTALLATIONS**

### **Installation de Docker pour Linux**
`<apt install docker.io>`
`<docker --version>`
Vérifier que la virtualisation est supportée:
`<grep -E --color 'vmx|svm' /proc/cpuinfo>`
Si la réponse n’est pas vide alors c’est supporté.

### **Installation de Minikube**
`<curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 \  && chmod +x minikube>`
Ajouter minikube entant que variable environnement :
`<mkdir -p /usr/local/bin/>`
`<install minikube /usr/local/bin/>`
Vérification de la réussite de l’installation :
`<minikube start --vm-driver=<driver_name> >`
`<minikube status>`



## **2. Familiarisation avec Kubernetes**

* Pour voir les déploiements : `<kubectl get deployment>`
* Pour voir les noeuds : `<kubectl get nodes>`
* pour voir les services : `<kubectl get service>`
* Pour voir les informartions sur les cluster : `<kubectl cluster-info>`

## **3. Déployer une image**
1. Pour lancer Minikube qui permet de lancer une machine virtuelle qui héberge Kubernetes : `<minikube start>`

## **4. Dashboard**
1. Pour mettre en place la dashboard : `<sudo kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta8/aio/deploy/recommended.yaml>`
2. Pour pouvoir changer l'accessibilité de la dashboard : `<sudo kubectl proxy>` 
3. Il suffit de rentrer l'URL suivante dans un navigateur pour accéder à votre dashboard : [ici](http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/#/deployment?namespace=default)
4. Il est possible de trouver un token permettant de se connecter à la dashboard grâce à la commande suivante : 
* `<sudo kubectl get secret>`
Celle-ci va retourner une liste de *secret*. Mettre le nom du secret dans la commande suivante : 
* `<sudo kubectl describe secret  default-name-secret>`
Celle-ci va retourner une liste d'information dont le token, que l'on peut utiliser pour se connecter dans la dashboard.


